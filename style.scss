/* Declaring these colors wouldn't typically be necessary as I could have just used the CSS color names, but best practices are to manually define the colors so that the different browsers don't interpret them differently. Also since this is a demonstration I thought it would be good to showcase how I would typically use SCSS variables. */
$red: #ff0000;
$green: #00ff00;
$blue: #0000ff;
$orange: #ffb200;
$yellow: #faff00;

/* Since we control the width of the main and second rows (set at 800px each) then I'm making the only breakpoint (mobile) for screensizes less than 800px. Am I tipping my hand here that I did not design this from a mobile first approach? Yes. But - typically I would start with mobile first for a real project. */
@mixin mobile {
  @media only screen and (max-width: 800px) {
    @content;
  }
}

/* At the top of each stylesheet I define all the variables and animations that I'll be using later. In this case the animation is just used to make the circles appear and transform into squares in the second row. The requirements said the shape must "become a square". I assume this meant it must start as a circle and not simply just appear as a square, which is how I designed the below animation. */
@keyframes manifestSquare {
  0% {
    top: 200px;
    opacity: 0;
    border-radius: 50%;
  }
  50% {
    top: 100px;
    opacity: 1;
    border-radius: 50%;
  }
  100% {
    top: 100px;
    opacity: 1;
    border-radius: 0;
  }
}

/* Same animation as above but designed to accommodate the different circle sizes on mobile. */
@keyframes manifestSqMobile {
  0% {
    top: 120px;
    opacity: 0;
    border-radius: 50%;
  }
  50% {
    top: 60px;
    opacity: 1;
    border-radius: 50%;
  }
  100% {
    top: 60px;
    opacity: 1;
    border-radius: 0;
  }
}

h1 {
  font-size: 2.4rem;
  margin-top: 100px;
  margin-bottom: 10px;
}

h3 {
  font-size: 1.4rem;
  margin-bottom: 50px;
}

h5 {
  font-size: 1rem;
  margin-top: 50px;
  margin-bottom: 1em;
  text-decoration: underline;
}

ul {
  list-style: none;
  padding: 0;

  li {
    margin-bottom: 1em;
    font-size: 1rem;
  }
}

html,
body {
  background: #000;
  font-family: Open Sans, sans-serif;
  font-weight: 600;
  color: #fff;
  text-align: center;
  font-size: 14px;

  @include mobile {
    padding: 0 20px;
    background: #fff;
    color: #000;
    font-size: 12px;
  }
}

.main-row,
.second-row {
  display: flex;
  width: 800px;
  justify-content: space-evenly;
  margin: 0 auto;
  height: 200px;
  pointer-events: none;

  &:hover {
    .circle {
      opacity: 0.5;
    }
  }

  @include mobile {
    width: 100%;
    height: 120px;
  }

  .circle {
    /* The order I use is typically: element styles, state styles(hover, active, etc.), psuedo element styles, extra classes, and finally child elements. You will notice that this circle class follows the same pattern. */
    height: 100px;
    width: 100px;
    border-radius: 50%;
    position: relative;
    pointer-events: auto;
    transition: opacity 0.3s ease-in-out;

    @include mobile {
      height: 60px;
      width: 60px;
    }

    &:hover {
      opacity: 1;
      cursor: pointer;

      .color-info {
        top: 100px;
        opacity: 1;

        @include mobile {
          top: 60px;
        }
      }
    }

    &.red-shape {
      background: $red;
      color: $red;
    }

    &.green-shape {
      background: $green;
      color: $green;
    }

    &.blue-shape {
      background: $blue;
      color: $blue;
    }

    &.orange-shape {
      background: $orange;
      color: $orange;
    }

    &.yellow-shape {
      background: $yellow;
      color: $yellow;
    }

    .color-info {
      width: 100%;
      text-align: center;
      height: 100%;
      display: flex;
      align-items: center;
      opacity: 0;
      position: absolute;
      top: 0;
      left: 0;
      transition: all 0.3s ease-in-out;

      @include mobile {
        color: black;
      }
    }
  }
}

.main-row {
  margin-top: 50px;
}

.second-row {
  .circle {
    top: 100px;
    opacity: 1;
    border-radius: 0;
    animation: manifestSquare 1.5s ease-in-out;
    transition: all 0.3s ease-in-out;

    @include mobile {
      top: 60px;
      animation: manifestSqMobile 1s ease-in-out;
    }

    &:hover {
      border-radius: 50%;

      .color-info {
        top: -100px;

        @include mobile {
          top: -60px;
        }
      }
    }
  }
}

.xtra-links a {
  display: inline-block;
  margin: 20px 30px;
}
